local mode = 2
local running = true
local Delay_World = 3000
local Ticket_ID = 1898
local Carnival_World = "CARNIVAL"
local Storage_World = "FBAAI|BASO12"

-- Config untuk anti-stuck
local config = {
    Max_Stuck_Time = 5000, -- 10 detik
    Retry_Attempts = 10
}

-- Variabel untuk deteksi stuck
local lastPosition = nil
local stuckTimer = 0
local retryCount = 0

patchMemoryByName("Mod fly")

function enter(x, y)
    local pkt = {}
    pkt.type = 7
    pkt.punchx = x
    pkt.punchy = y        
    pkt.x = getLocal().pos.x        
    pkt.y = getLocal().pos.y       
    pkt.value = 18
    sendPacketRaw(false, pkt)
end

-- Fungsi cek inventory
function Inventory(id)
    for _, x in pairs(getInventory()) do
        if x.id == id then
            return x.amount
        end
    end
    return 0
end

-- Fungsi warp
function Warp(worldName)
    sleep(100)
    sendPacket(3, "action|join_request\nname|" .. worldName)
    sleep(Delay_World)
end

-- Fungsi collect item dalam range 3 tile
function Collect(x, y)
    local playerX = math.floor(getLocal().pos.x / 32)
    local playerY = math.floor(getLocal().pos.y / 32)
    
    if math.abs(playerX - x) <= 3 and math.abs(playerY - y) <= 3 then
        requestCollect(x, y, Ticket_ID)
        return true
    end
    return false
end

-- Fungsi take ticket
function Take_Item()
    for _, obj in pairs(getWorldObject()) do
        if obj.id == Ticket_ID then
            local targetX = math.floor(obj.pos.x / 32)
            local targetY = math.floor(obj.pos.y / 32)
            
            findPath(targetX, targetY)
            sleep(800)
            
            if Collect(targetX, targetY) then
                sleep(1000)
                return true
            end
        end
    end
    return false
end

-- Fungsi refill ticket
function Refill_Ticket()
    Warp(Storage_World)
    sleep(2000)
    
    for i = 1, 10 do
        if Take_Item() then
            sleep(2000)
            Warp(Carnival_World)
            sleep(2000)
            return true
        end
        sleep(1000)
    end
    
    return false
end

-- Fungsi untuk deteksi stuck
function isStuck()
    local currentX = math.floor(getLocal().pos.x / 32)
    local currentY = math.floor(getLocal().pos.y / 32)
    
    if lastPosition then
        if lastPosition.x == currentX and lastPosition.y == currentY then
            if getCurrentTimeInternal() - stuckTimer > config.Max_Stuck_Time then
                return true
            end
        else
            lastPosition = {x = currentX, y = currentY}
            stuckTimer = getCurrentTimeInternal()
            retryCount = 0
        end
    else
        lastPosition = {x = currentX, y = currentY}
        stuckTimer = getCurrentTimeInternal()
    end
    return false
end

-- Fungsi recovery saat stuck - langsung ke target utama
function recoverFromStuck()
    retryCount = retryCount + 1
    
    -- Reset stuck detection
    lastPosition = nil
    
    -- Langsung coba ke target utama berdasarkan mode
    if mode == 1 then
        findPath(24, 24) -- Target utama maze
    elseif mode == 2 then
        findPath(31, 11) -- Target utama death race
    elseif mode == 3 then
        findPath(96, 23) -- Target utama growganoth right
    elseif mode == 4 then
        findPath(3, 23) -- Target utama growganoth left
    elseif mode == 5 then
        findPath(21, 46) -- Target utama spiky survival
        sleep(5000)
    end
    
    sleep(2000)
    
    if retryCount >= config.Retry_Attempts then
        sleep(5000)
        retryCount = 0
    end
end

-- ===== MODE FUNCTIONS =====
function Maze()
    local x = math.floor(getLocal().pos.x / 32)
    local y = math.floor(getLocal().pos.y / 32)
    
    if isStuck() then
        recoverFromStuck()
        return
    end
    
    if x == 26 and y == 25 then
        enter(26, 25)
        sleep(500)
    elseif x == 14 and y == 32 then
        findPath(24, 24)
        sleep(800)
    elseif x == 24 and y == 24 then
        sleep(500)
        retryCount = 0
    else
        findPath(26, 25)
        sleep(800)
    end
end

function DeathRace()
    local x = math.floor(getLocal().pos.x / 32)
    local y = math.floor(getLocal().pos.y / 32)
    
    if isStuck() then
        recoverFromStuck()
        return
    end
    
    if x == 33 and y == 13 then
        enter(33, 13)
        sleep(100)
    elseif x == 31 and y == 15 then
        findPath(31, 11)
        sleep(100)
    elseif x == 31 and y == 11 then
        sleep(100)
        retryCount = 0
    else
        findPath(33, 13)
        sleep(200)
    end
end

function GrowganothRight()
    local x = math.floor(getLocal().pos.x / 32)
    local y = math.floor(getLocal().pos.y / 32)
    
    if isStuck() then
        recoverFromStuck()
        return
    end
    
    if x == 92 and y == 37 then
        enter(92, 37)
        sleep(500)
    elseif x == 96 and y == 53 then
        findPath(96, 23)
        sleep(800)
    elseif x == 96 and y == 23 then
        requestTileChange(96, 23, 18)
        sleep(500)
        retryCount = 0
    else
        findPath(92, 37)
        sleep(800)
    end
end

function GrowganothLeft()
    local x = math.floor(getLocal().pos.x / 32)
    local y = math.floor(getLocal().pos.y / 32)
    
    if isStuck() then
        recoverFromStuck()
        return
    end
    
    if x == 7 and y == 37 then
        enter(7, 37)
        sleep(500)
    elseif x == 3 and y == 53 then
        findPath(3, 23)
        sleep(800)
    elseif x == 3 and y == 23 then
        requestTileChange(3, 23, 18)
        sleep(500)
        retryCount = 0
    else
        findPath(7, 37)
        sleep(800)
    end
end

-- ===== MODE 5: SPIKY SURVIVAL =====
function SpikySurvival()
    local x = math.floor(getLocal().pos.x / 32)
    local y = math.floor(getLocal().pos.y / 32)
    
    if isStuck() then
        recoverFromStuck()
        return
    end
    
    -- Masuk ke Spiky Survival
    if x == 28 and y == 42 then
        enter(28, 42)
        sleep(500)
    
    -- Setelah masuk, mulai dari 21,41 menuju target 21,46
    elseif x == 21 and y == 41 then
        findPath(21, 46)
        sleep(800)
    
    -- Jika sudah mencapai target 21,46
    elseif x == 21 and y == 46 then
        sleep(500)
        retryCount = 0
    
    else
        -- Default: menuju pintu masuk Spiky Survival
        findPath(28, 42)
        sleep(800)
    end
end

-- ===== MAIN EXECUTION =====
function executeMode()
    if Inventory(Ticket_ID) <= 0 then
        Refill_Ticket()
        return
    end
    
    if mode == 1 then
        Maze()
    elseif mode == 2 then
        DeathRace()
    elseif mode == 3 then
        GrowganothRight()
    elseif mode == 4 then
        GrowganothLeft()
    elseif mode == 5 then
        SpikySurvival()
    end
end

-- ===== MAIN LOOP =====
while running do
    executeMode()
    sleep(1000)
end
